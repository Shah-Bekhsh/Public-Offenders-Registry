{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\FYP\\\\offenders_registry\\\\pages\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { Card, Button, Container } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport registry from \"../ethereum/registry\"; // import record from \"../ethereum/record\";\n\nimport { Router } from \"../../routes\";\n\nclass RegistryIndex extends Component {\n  static async getInitialProps() {\n    const records = await registry.methods.listOffenders().call(); // const status = await record.methods.status().call();\n    //const name = records.con_name;\n\n    return {\n      records: records\n    };\n  }\n\n  renderRecords() {\n    const items = this.props.records.map(address => {\n      return {\n        header: address,\n        description: /*#__PURE__*/_jsxDEV(Link, {\n          route: `/offenders/${address}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"View Record\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this),\n        // Change this from a link to the name of the perp\n        fluid: true\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Current Records\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), this.renderRecords()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default RegistryIndex;","map":{"version":3,"sources":["E:/FYP/offenders_registry/pages/index.js"],"names":["React","Component","Card","Button","Container","Layout","registry","Router","RegistryIndex","getInitialProps","records","methods","listOffenders","call","renderRecords","items","props","map","address","header","description","fluid","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,QAAwC,mBAAxC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,sBAArB,C,CACA;;AACA,SAASC,MAAT,QAAuB,cAAvB;;AAEA,MAAMC,aAAN,SAA4BP,SAA5B,CAAsC;AACpC,eAAaQ,eAAb,GAA+B;AAC7B,UAAMC,OAAO,GAAG,MAAMJ,QAAQ,CAACK,OAAT,CAAiBC,aAAjB,GAAiCC,IAAjC,EAAtB,CAD6B,CAE7B;AACA;;AACA,WAAO;AAAEH,MAAAA,OAAO,EAAEA;AAAX,KAAP;AACD;;AAEDI,EAAAA,aAAa,GAAG;AACd,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWN,OAAX,CAAmBO,GAAnB,CAAwBC,OAAD,IAAa;AAChD,aAAO;AACLC,QAAAA,MAAM,EAAED,OADH;AAELE,QAAAA,WAAW,eACT,QAAC,IAAD;AAAM,UAAA,KAAK,EAAG,cAAaF,OAAQ,EAAnC;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHG;AAMF;AACHG,QAAAA,KAAK,EAAE;AAPF,OAAP;AASD,KAVa,CAAd;AAYA,wBAAO,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEN;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,MAAD;AAAA,6BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEG,KAAKR,aAAL,EAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAjCmC;;AAoCtC,eAAeN,aAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Button, Container } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport registry from \"../ethereum/registry\";\n// import record from \"../ethereum/record\";\nimport { Router } from \"../../routes\";\n\nclass RegistryIndex extends Component {\n  static async getInitialProps() {\n    const records = await registry.methods.listOffenders().call();\n    // const status = await record.methods.status().call();\n    //const name = records.con_name;\n    return { records: records };\n  }\n\n  renderRecords() {\n    const items = this.props.records.map((address) => {\n      return {\n        header: address,\n        description: (\n          <Link route={`/offenders/${address}`}>\n            <a>View Record</a>\n          </Link>\n        ), // Change this from a link to the name of the perp\n        fluid: true,\n      };\n    });\n\n    return <Card.Group items={items} />;\n  }\n\n  render() {\n    return (\n      <Layout>\n        <div>\n          <h3>Current Records</h3>\n          {this.renderRecords()}\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default RegistryIndex;\n"]},"metadata":{},"sourceType":"module"}