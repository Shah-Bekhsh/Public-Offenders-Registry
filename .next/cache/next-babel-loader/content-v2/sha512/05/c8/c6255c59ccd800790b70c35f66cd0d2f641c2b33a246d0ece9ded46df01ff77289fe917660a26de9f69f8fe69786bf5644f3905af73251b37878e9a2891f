{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\FYP\\\\offenders_registry\\\\pages\\\\offenders\\\\createinstance.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Input } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport registry from \"../../ethereum/registry\";\nimport web3 from \"../../ethereum/web3\";\n\nclass NewRecord extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      pressed: \"\"\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      const accounts = await web3.eth.getAccounts();\n      await registry.methods.createRecord().send({\n        from: accounts[0]\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create A New Record Block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Press the Create Block button to create a new instance of the Record contract.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.onSubmit,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Register\",\n          color: \"red\",\n          onClick: event => this.setState({\n            pressed: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default NewRecord;","map":{"version":3,"sources":["E:/FYP/offenders_registry/pages/offenders/createinstance.js"],"names":["React","Component","Form","Button","Input","Layout","registry","web3","NewRecord","pressed","event","preventDefault","accounts","eth","getAccounts","methods","createRecord","send","from","render","onSubmit","setState","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,mBAApC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;AAEA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAAA;AAAA;;AAAA,mCACxB;AACNQ,MAAAA,OAAO,EAAE;AADH,KADwB;;AAAA,sCAKrB,MAAOC,KAAP,IAAiB;AAC1BA,MAAAA,KAAK,CAACC,cAAN;AAEA,YAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,GAAL,CAASC,WAAT,EAAvB;AACA,YAAMR,QAAQ,CAACS,OAAT,CAAiBC,YAAjB,GAAgCC,IAAhC,CAAqC;AACzCC,QAAAA,IAAI,EAAEN,QAAQ,CAAC,CAAD;AAD2B,OAArC,CAAN;AAGD,KAZ+B;AAAA;;AAchCO,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,MAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKC,QAArB;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,KAAK,EAAC,UADR;AAEE,UAAA,KAAK,EAAC,KAFR;AAGE,UAAA,OAAO,EAAGV,KAAD,IAAW,KAAKW,QAAL,CAAc;AAAEZ,YAAAA,OAAO,EAAEC,KAAK,CAACY,MAAN,CAAaC;AAAxB,WAAd;AAHtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AA/B+B;;AAkClC,eAAef,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Input } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport registry from \"../../ethereum/registry\";\nimport web3 from \"../../ethereum/web3\";\n\nclass NewRecord extends Component {\n  state = {\n    pressed: \"\",\n  };\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n\n    const accounts = await web3.eth.getAccounts();\n    await registry.methods.createRecord().send({\n      from: accounts[0],\n    });\n  };\n\n  render() {\n    return (\n      <Layout>\n        <h1>Create A New Record Block</h1>\n        <p>\n          Press the Create Block button to create a new instance of the Record\n          contract.\n        </p>\n        <Form onSubmit={this.onSubmit}>\n          <Button\n            label=\"Register\"\n            color=\"red\"\n            onClick={(event) => this.setState({ pressed: event.target.value })}\n          />\n        </Form>\n      </Layout>\n    );\n  }\n}\n\nexport default NewRecord;\n"]},"metadata":{},"sourceType":"module"}