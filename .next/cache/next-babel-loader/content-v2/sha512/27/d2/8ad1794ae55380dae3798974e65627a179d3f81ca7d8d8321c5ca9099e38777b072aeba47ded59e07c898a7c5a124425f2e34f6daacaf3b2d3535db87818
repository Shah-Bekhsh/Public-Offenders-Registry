{"ast":null,"code":"import _regeneratorRuntime from \"E:/FYP/offenders_registry/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/FYP/offenders_registry/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"E:/FYP/offenders_registry/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/FYP/offenders_registry/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"E:/FYP/offenders_registry/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"E:/FYP/offenders_registry/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:/FYP/offenders_registry/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\FYP\\\\offenders_registry\\\\pages\\\\offenders\\\\show.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Card } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\nimport record from \"../../ethereum/record\";\nimport { Router } from \"../../routes\";\n\nvar RecordShow = /*#__PURE__*/function (_Component) {\n  _inherits(RecordShow, _Component);\n\n  var _super = _createSuper(RecordShow);\n\n  function RecordShow() {\n    _classCallCheck(this, RecordShow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RecordShow, [{\n    key: \"renderCards\",\n    value: function renderCards() {\n      var name = this.props.val1;\n      var cnic = this.props.val2;\n      var zone = this.props.val3;\n      var _address = this.props.val4;\n      var _fir = this.props.val5;\n      var _firDesc = this.props.val6;\n      var items = [{\n        header: name,\n        meta: \"Name of Offender\",\n        description: \"The offender's name is registered as mentioned in police records. Some offenders dont have recorded last names. Some offenders have aliases as well.\"\n      }, {\n        header: cnic,\n        meta: \"N.I.C Number\",\n        description: \"Offender's registered National Identity Card number\"\n      }, {\n        header: zone,\n        meta: \"Jurisdictional P.S. Zone\",\n        description: \"The zone of Police Station\"\n      }, {\n        header: _address,\n        meta: \"Offender's Address\",\n        description: \"Offender's address as registerd in police records\",\n        fluid: true\n      }, {\n        header: _fir,\n        meta: \"First Information Report Numbers\",\n        description: \"The FIR contains all the charges that the offender has been convicted of.\",\n        fluid: true\n      }, {\n        header: _firDesc,\n        meta: \"First Information Report Detailed Information\",\n        description: \"All the detail of the FIR will be addded here.\",\n        fluid: true\n      }];\n      return /*#__PURE__*/_jsxDEV(Card.Group, {\n        items: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 12\n      }, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Show Particular Record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), this.renderCards()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this);\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n        var currentRecord, summary;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                currentRecord = record(props.query.address);\n                _context.next = 3;\n                return currentRecord.methods.getOffender().call();\n\n              case 3:\n                summary = _context.sent;\n                return _context.abrupt(\"return\", {\n                  val1: summary[0],\n                  val2: summary[1],\n                  val3: summary[2],\n                  val4: summary[3],\n                  val5: summary[4],\n                  val6: summary[5]\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return RecordShow;\n}(Component);\n\nexport default RecordShow;","map":{"version":3,"sources":["E:/FYP/offenders_registry/pages/offenders/show.js"],"names":["React","Component","Layout","Card","PropTypes","record","Router","RecordShow","name","props","val1","cnic","val2","zone","val3","_address","val4","_fir","val5","_firDesc","val6","items","header","meta","description","fluid","renderCards","currentRecord","query","address","methods","getOffender","call","summary"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,MAAT,QAAuB,cAAvB;;IAEMC,U;;;;;;;;;;;;;kCAgBU;AACZ,UAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWC,IAAxB;AACA,UAAMC,IAAI,GAAG,KAAKF,KAAL,CAAWG,IAAxB;AACA,UAAMC,IAAI,GAAG,KAAKJ,KAAL,CAAWK,IAAxB;AACA,UAAMC,QAAQ,GAAG,KAAKN,KAAL,CAAWO,IAA5B;AACA,UAAMC,IAAI,GAAG,KAAKR,KAAL,CAAWS,IAAxB;AACA,UAAMC,QAAQ,GAAG,KAAKV,KAAL,CAAWW,IAA5B;AAEA,UAAMC,KAAK,GAAG,CACZ;AACEC,QAAAA,MAAM,EAAEd,IADV;AAEEe,QAAAA,IAAI,EAAE,kBAFR;AAGEC,QAAAA,WAAW,EACT;AAJJ,OADY,EAQZ;AACEF,QAAAA,MAAM,EAAEX,IADV;AAEEY,QAAAA,IAAI,EAAE,cAFR;AAGEC,QAAAA,WAAW,EAAE;AAHf,OARY,EAcZ;AACEF,QAAAA,MAAM,EAAET,IADV;AAEEU,QAAAA,IAAI,EAAE,0BAFR;AAGEC,QAAAA,WAAW,EAAE;AAHf,OAdY,EAoBZ;AACEF,QAAAA,MAAM,EAAEP,QADV;AAEEQ,QAAAA,IAAI,EAAE,oBAFR;AAGEC,QAAAA,WAAW,EAAE,mDAHf;AAIEC,QAAAA,KAAK,EAAE;AAJT,OApBY,EA2BZ;AACEH,QAAAA,MAAM,EAAEL,IADV;AAEEM,QAAAA,IAAI,EAAE,kCAFR;AAGEC,QAAAA,WAAW,EACT,2EAJJ;AAKEC,QAAAA,KAAK,EAAE;AALT,OA3BY,EAkCZ;AACEH,QAAAA,MAAM,EAAEH,QADV;AAEEI,QAAAA,IAAI,EAAE,+CAFR;AAGEC,QAAAA,WAAW,EAAE,gDAHf;AAIEC,QAAAA,KAAK,EAAE;AAJT,OAlCY,CAAd;AA0CA,0BAAO,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAEJ;AAAnB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;;6BAEQ;AACP,0BACE,QAAC,MAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEG,KAAKK,WAAL,EAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD;;;;uGA3E4BjB,K;;;;;;AACrBkB,gBAAAA,a,GAAgBtB,MAAM,CAACI,KAAK,CAACmB,KAAN,CAAYC,OAAb,C;;uBAENF,aAAa,CAACG,OAAd,CAAsBC,WAAtB,GAAoCC,IAApC,E;;;AAAhBC,gBAAAA,O;iDAEC;AACLvB,kBAAAA,IAAI,EAAEuB,OAAO,CAAC,CAAD,CADR;AAELrB,kBAAAA,IAAI,EAAEqB,OAAO,CAAC,CAAD,CAFR;AAGLnB,kBAAAA,IAAI,EAAEmB,OAAO,CAAC,CAAD,CAHR;AAILjB,kBAAAA,IAAI,EAAEiB,OAAO,CAAC,CAAD,CAJR;AAKLf,kBAAAA,IAAI,EAAEe,OAAO,CAAC,CAAD,CALR;AAMLb,kBAAAA,IAAI,EAAEa,OAAO,CAAC,CAAD;AANR,iB;;;;;;;;;;;;;;;;;;;EANchC,S;;AA+EzB,eAAeM,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Card } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\nimport record from \"../../ethereum/record\";\nimport { Router } from \"../../routes\";\n\nclass RecordShow extends Component {\n  static async getInitialProps(props) {\n    const currentRecord = record(props.query.address);\n\n    const summary = await currentRecord.methods.getOffender().call();\n\n    return {\n      val1: summary[0],\n      val2: summary[1],\n      val3: summary[2],\n      val4: summary[3],\n      val5: summary[4],\n      val6: summary[5],\n    };\n  }\n\n  renderCards() {\n    const name = this.props.val1;\n    const cnic = this.props.val2;\n    const zone = this.props.val3;\n    const _address = this.props.val4;\n    const _fir = this.props.val5;\n    const _firDesc = this.props.val6;\n\n    const items = [\n      {\n        header: name,\n        meta: \"Name of Offender\",\n        description:\n          \"The offender's name is registered as mentioned in police records. Some offenders dont have recorded last names. Some offenders have aliases as well.\",\n      },\n\n      {\n        header: cnic,\n        meta: \"N.I.C Number\",\n        description: \"Offender's registered National Identity Card number\",\n      },\n\n      {\n        header: zone,\n        meta: \"Jurisdictional P.S. Zone\",\n        description: \"The zone of Police Station\",\n      },\n\n      {\n        header: _address,\n        meta: \"Offender's Address\",\n        description: \"Offender's address as registerd in police records\",\n        fluid: true,\n      },\n\n      {\n        header: _fir,\n        meta: \"First Information Report Numbers\",\n        description:\n          \"The FIR contains all the charges that the offender has been convicted of.\",\n        fluid: true,\n      },\n      {\n        header: _firDesc,\n        meta: \"First Information Report Detailed Information\",\n        description: \"All the detail of the FIR will be addded here.\",\n        fluid: true,\n      },\n    ];\n\n    return <Card.Group items={items} />;\n  }\n\n  render() {\n    return (\n      <Layout>\n        <h3>Show Particular Record</h3>\n        {this.renderCards()}\n      </Layout>\n    );\n  }\n}\n\nexport default RecordShow;\n"]},"metadata":{},"sourceType":"module"}