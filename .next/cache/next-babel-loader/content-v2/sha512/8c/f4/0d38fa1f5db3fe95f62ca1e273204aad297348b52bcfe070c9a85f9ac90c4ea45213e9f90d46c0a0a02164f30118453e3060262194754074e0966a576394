{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\FYP\\\\offenders_registry\\\\pages\\\\offenders\\\\show.js\";\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Card } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\nimport record from \"../../ethereum/record\";\n\nclass RecordShow extends Component {\n  static async getInitialProps(props) {\n    const currentRecord = record(props.query.address);\n    const summary = await currentRecord.methods.getOffender().call();\n    return {\n      val1: summary[0],\n      val2: summary[1],\n      val3: summary[2],\n      val4: summary[3],\n      val5: summary[4]\n    };\n  }\n\n  renderCards() {\n    const name = this.props.val1;\n    const cnic = this.props.val2;\n    const zone = this.props.val3;\n    const _address = this.props.val4;\n    const _fir = this.props.val5;\n    const items = [{\n      header: name,\n      meta: \"Name of Offender\",\n      description: \"The offender's name is registered as mentioned in police records. Some offenders dont have recorded last names. Some offenders have aliases as well.\"\n    }];\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Show Particular Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), this.renderCards()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default RecordShow;","map":{"version":3,"sources":["E:/FYP/offenders_registry/pages/offenders/show.js"],"names":["React","Component","Layout","Card","PropTypes","record","RecordShow","getInitialProps","props","currentRecord","query","address","summary","methods","getOffender","call","val1","val2","val3","val4","val5","renderCards","name","cnic","zone","_address","_fir","items","header","meta","description","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AACjC,eAAaM,eAAb,CAA6BC,KAA7B,EAAoC;AAClC,UAAMC,aAAa,GAAGJ,MAAM,CAACG,KAAK,CAACE,KAAN,CAAYC,OAAb,CAA5B;AAEA,UAAMC,OAAO,GAAG,MAAMH,aAAa,CAACI,OAAd,CAAsBC,WAAtB,GAAoCC,IAApC,EAAtB;AAEA,WAAO;AACLC,MAAAA,IAAI,EAAEJ,OAAO,CAAC,CAAD,CADR;AAELK,MAAAA,IAAI,EAAEL,OAAO,CAAC,CAAD,CAFR;AAGLM,MAAAA,IAAI,EAAEN,OAAO,CAAC,CAAD,CAHR;AAILO,MAAAA,IAAI,EAAEP,OAAO,CAAC,CAAD,CAJR;AAKLQ,MAAAA,IAAI,EAAER,OAAO,CAAC,CAAD;AALR,KAAP;AAOD;;AAEDS,EAAAA,WAAW,GAAG;AACZ,UAAMC,IAAI,GAAG,KAAKd,KAAL,CAAWQ,IAAxB;AACA,UAAMO,IAAI,GAAG,KAAKf,KAAL,CAAWS,IAAxB;AACA,UAAMO,IAAI,GAAG,KAAKhB,KAAL,CAAWU,IAAxB;AACA,UAAMO,QAAQ,GAAG,KAAKjB,KAAL,CAAWW,IAA5B;AACA,UAAMO,IAAI,GAAG,KAAKlB,KAAL,CAAWY,IAAxB;AAEA,UAAMO,KAAK,GAAG,CACZ;AACEC,MAAAA,MAAM,EAAEN,IADV;AAEEO,MAAAA,IAAI,EAAE,kBAFR;AAGEC,MAAAA,WAAW,EACT;AAJJ,KADY,CAAd;AASA,wBAAO,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEH;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,MAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKV,WAAL,EAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAzCgC;;AA4CnC,eAAef,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Card } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\nimport record from \"../../ethereum/record\";\n\nclass RecordShow extends Component {\n  static async getInitialProps(props) {\n    const currentRecord = record(props.query.address);\n\n    const summary = await currentRecord.methods.getOffender().call();\n\n    return {\n      val1: summary[0],\n      val2: summary[1],\n      val3: summary[2],\n      val4: summary[3],\n      val5: summary[4],\n    };\n  }\n\n  renderCards() {\n    const name = this.props.val1;\n    const cnic = this.props.val2;\n    const zone = this.props.val3;\n    const _address = this.props.val4;\n    const _fir = this.props.val5;\n\n    const items = [\n      {\n        header: name,\n        meta: \"Name of Offender\",\n        description:\n          \"The offender's name is registered as mentioned in police records. Some offenders dont have recorded last names. Some offenders have aliases as well.\",\n      },\n    ];\n\n    return <Card.Group items={items} />;\n  }\n\n  render() {\n    return (\n      <Layout>\n        <h3>Show Particular Record</h3>\n        {this.renderCards()}\n      </Layout>\n    );\n  }\n}\n\nexport default RecordShow;\n"]},"metadata":{},"sourceType":"module"}