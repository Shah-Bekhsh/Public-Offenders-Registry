{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\FYP\\\\offenders_registry\\\\pages\\\\offenders\\\\show.js\";\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Card } from \"semantic-ui-react\";\nimport record from \"../../ethereum/record\";\n\nclass RecordShow extends Component {\n  static async getInitialProps(props) {\n    const currentRecord = record(props.query.address);\n    const summary = await currentRecord.methods.getOffender().call();\n    return {\n      _name: summary[0],\n      _nic: summary[1],\n      _zone: summary[2],\n      _address: summary[3],\n      _fir: summary[4]\n    };\n  }\n\n  renderCards() {\n    const {\n      name,\n      nic,\n      zone,\n      address,\n      fir\n    } = this.props;\n    const items = [{\n      header: name,\n      meta: \"Name of Offender\",\n      description: \"This is the name of the offender as specified inside the police records. Some entries may not have a last name. Some entries may have aliases\",\n      style: {}\n    }];\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Show Particular Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), this.renderCards()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default RecordShow;","map":{"version":3,"sources":["E:/FYP/offenders_registry/pages/offenders/show.js"],"names":["React","Component","Layout","Card","record","RecordShow","getInitialProps","props","currentRecord","query","address","summary","methods","getOffender","call","_name","_nic","_zone","_address","_fir","renderCards","name","nic","zone","fir","items","header","meta","description","style","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AACjC,eAAaK,eAAb,CAA6BC,KAA7B,EAAoC;AAClC,UAAMC,aAAa,GAAGJ,MAAM,CAACG,KAAK,CAACE,KAAN,CAAYC,OAAb,CAA5B;AAEA,UAAMC,OAAO,GAAG,MAAMH,aAAa,CAACI,OAAd,CAAsBC,WAAtB,GAAoCC,IAApC,EAAtB;AAEA,WAAO;AACLC,MAAAA,KAAK,EAAEJ,OAAO,CAAC,CAAD,CADT;AAELK,MAAAA,IAAI,EAAEL,OAAO,CAAC,CAAD,CAFR;AAGLM,MAAAA,KAAK,EAAEN,OAAO,CAAC,CAAD,CAHT;AAILO,MAAAA,QAAQ,EAAEP,OAAO,CAAC,CAAD,CAJZ;AAKLQ,MAAAA,IAAI,EAAER,OAAO,CAAC,CAAD;AALR,KAAP;AAOD;;AAEDS,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,GAAR;AAAaC,MAAAA,IAAb;AAAmBb,MAAAA,OAAnB;AAA4Bc,MAAAA;AAA5B,QAAoC,KAAKjB,KAA/C;AAEA,UAAMkB,KAAK,GAAG,CACZ;AACEC,MAAAA,MAAM,EAAEL,IADV;AAEEM,MAAAA,IAAI,EAAE,kBAFR;AAGEC,MAAAA,WAAW,EACT,+IAJJ;AAKEC,MAAAA,KAAK,EAAE;AALT,KADY,CAAd;AAUA,wBAAO,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEJ;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,MAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKV,WAAL,EAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAtCgC;;AAyCnC,eAAef,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Card } from \"semantic-ui-react\";\nimport record from \"../../ethereum/record\";\n\nclass RecordShow extends Component {\n  static async getInitialProps(props) {\n    const currentRecord = record(props.query.address);\n\n    const summary = await currentRecord.methods.getOffender().call();\n\n    return {\n      _name: summary[0],\n      _nic: summary[1],\n      _zone: summary[2],\n      _address: summary[3],\n      _fir: summary[4],\n    };\n  }\n\n  renderCards() {\n    const { name, nic, zone, address, fir } = this.props;\n\n    const items = [\n      {\n        header: name,\n        meta: \"Name of Offender\",\n        description:\n          \"This is the name of the offender as specified inside the police records. Some entries may not have a last name. Some entries may have aliases\",\n        style: {},\n      },\n    ];\n\n    return <Card.Group items={items} />;\n  }\n\n  render() {\n    return (\n      <Layout>\n        <h3>Show Particular Record</h3>\n        {this.renderCards()}\n      </Layout>\n    );\n  }\n}\n\nexport default RecordShow;\n"]},"metadata":{},"sourceType":"module"}